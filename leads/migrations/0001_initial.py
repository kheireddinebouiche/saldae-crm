# Generated by Django 3.1.4 on 2021-08-22 11:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('produits', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_identification', models.CharField(blank=True, max_length=100, null=True)),
                ('user_type', models.CharField(blank=True, choices=[('ad', 'Administrateur'), ('ag', 'Agent'), ('ve', 'Vendeur')], max_length=2, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('slug', models.SlugField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raison', models.CharField(blank=True, max_length=100, null=True)),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('prenom', models.CharField(blank=True, max_length=100, null=True)),
                ('adresse', models.CharField(blank=True, max_length=1000, null=True)),
                ('gerant', models.CharField(blank=True, max_length=100, null=True)),
                ('telephone', models.CharField(blank=True, max_length=12, null=True)),
                ('categorie_client', models.CharField(blank=True, choices=[('p', 'Personne'), ('e', 'Entreprise')], max_length=1, null=True)),
                ('type_client', models.CharField(blank=True, choices=[('pr', 'Prospet'), ('Fr', 'Fournisseur'), ('cl', 'Client')], max_length=2, null=True)),
                ('created_at', models.DateField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.agent')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='Tache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sommaire', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, max_length=2000, null=True)),
                ('date_debut', models.DateTimeField(blank=True, null=True)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('enc', 'En cours'), ('enp', 'En pause'), ('aff', 'A faire'), ('ann', 'Annulé'), ('ter', 'Terminé')], max_length=3, null=True)),
                ('priorite', models.CharField(blank=True, choices=[('1', '1'), ('3', '3'), ('2', '2')], max_length=1, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.client')),
            ],
            options={
                'verbose_name': 'Tâche',
                'verbose_name_plural': 'Tâches',
            },
        ),
        migrations.CreateModel(
            name='ProduitsDevis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtr', models.IntegerField(blank=True, null=True)),
                ('prix', models.FloatField(blank=True, null=True)),
                ('remise', models.FloatField(blank=True, null=True)),
                ('total', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='produits.produit')),
            ],
            options={
                'verbose_name': 'Ligne de devis',
                'verbose_name_plural': 'Lignes de devis',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_note', models.CharField(blank=True, max_length=1000, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('state', models.CharField(blank=True, choices=[('enc', 'En cours'), ('act', 'Active')], max_length=3, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('age', models.IntegerField(default=0)),
                ('phoned', models.BooleanField(default=False)),
                ('source', models.CharField(blank=True, choices=[('Youtube', 'Youtube'), ('Newsletter', 'Newsletter'), ('Google', 'Google')], max_length=100, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('special_files', models.FileField(blank=True, null=True, upload_to='')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.agent')),
            ],
        ),
        migrations.CreateModel(
            name='Devis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('env', 'Envoyé'), ('Ter', 'Terminé'), ('acc', 'Accepté'), ('fac', 'Facturé'), ('ann', 'Annullé')], max_length=3, null=True)),
                ('observation', models.TextField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('lignes_devis', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='leads.produitsdevis')),
                ('prospet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.client')),
            ],
        ),
    ]
